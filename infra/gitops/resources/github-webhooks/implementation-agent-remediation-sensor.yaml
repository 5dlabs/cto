---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: implementation-agent-remediation
  namespace: argo
  labels:
    sensor-type: multi-agent-orchestration
    agent-class: implementation
spec:
  template:
    serviceAccountName: argo-events-sa
  dependencies:
    - name: implementation-push-event
      eventSourceName: github
      eventName: org
      filters:
        data:
          # Filter for push events
          - path: headers.X-Github-Event
            type: string
            value: ["push"]
          # Match any 5DLabs implementation agent (Rex, Blaze, Morgan, etc.)
          - path: body.sender.login
            type: string
            comparator: "~"
            value: "5DLabs-(Rex|Blaze|Morgan)\\[bot\\]|5DLabs-(Rex|Blaze|Morgan)"
          # Ensure push is to a task branch
          - path: body.ref
            type: string
            comparator: "~"
            value: "refs/heads/task-.*"
  triggers:
    # Trigger 1: Cancel running Cleo/Tess CodeRun CRDs
    - template:
        name: cancel-running-quality-agents
        conditions: "implementation-push-event"
        k8s:
          operation: delete
          source:
            resource:
              apiVersion: agents.platform/v1
              kind: CodeRun
              metadata:
                namespace: argo
          parameters:
            # Extract task ID from branch name
            - src:
                dependencyName: implementation-push-event
                dataTemplate: |
                  {{ $ref := .Input.body.ref }}
                  {{ if hasPrefix $ref "refs/heads/task-" }}
                    {{ $branch := trimPrefix "refs/heads/task-" $ref }}
                    {{ $parts := splitList "-" $branch }}
                    {{ if gt (len $parts) 0 }}
                      {{ index $parts 0 }}
                    {{ end }}
                  {{ else }}
                    0
                  {{ end }}
              dest: taskId
            # Extract the pushing agent name for logging
            - src:
                dependencyName: implementation-push-event
                dataTemplate: |
                  {{ $login := .Input.body.sender.login }}
                  {{ if hasPrefix $login "5DLabs-" }}
                    {{ $agent := trimPrefix "5DLabs-" $login }}
                    {{ $agent := trimSuffix "[bot]" $agent }}
                    {{ lower $agent }}
                  {{ else }}
                    unknown
                  {{ end }}
              dest: pushingAgent
          # Delete CodeRuns for quality/testing agents
          # Note: This deletes ALL quality agent CodeRuns, not just for the specific task
          # This ensures a clean restart of the QA pipeline when implementation code changes
          # Task-specific filtering is not possible due to Argo Events labelSelector limitations
          labelSelector:
            matchExpressions:
              - key: github-app
                operator: NotIn
                values: ["5DLabs-Rex", "5DLabs-Blaze", "5DLabs-Morgan"]  # Exclude all implementation agents
      retryStrategy:
        steps: 3
        duration: "5s"
        factor: 2
        jitter: 0.1
    # Trigger 2: Log the remediation event for monitoring
    - template:
        name: log-remediation-event
        conditions: "implementation-push-event"
        k8s:
          operation: create
          source:
            resource:
              apiVersion: v1
              kind: Event
              metadata:
                generateName: implementation-remediation-
                namespace: argo
              involvedObject:
                apiVersion: agents.platform/v1
                kind: CodeRun
                name: task-remediation
                namespace: argo
              type: Normal
              reason: "AgentPushDetected"
              message: "Implementation agent pushed to task branch, restarting QA pipeline"
          parameters:
            - src:
                dependencyName: implementation-push-event
                dataTemplate: |
                  {{ $login := .Input.body.sender.login }}
                  {{ if hasPrefix $login "5DLabs-" }}
                    {{ $agent := trimPrefix "5DLabs-" $login }}
                    {{ $agent := trimSuffix "[bot]" $agent }}
                    {{ lower $agent }}
                  {{ else }}
                    unknown
                  {{ end }}
              dest: pushingAgent
            - src:
                dependencyName: implementation-push-event
                dataTemplate: |
                  {{ $ref := .Input.body.ref }}
                  {{ if hasPrefix $ref "refs/heads/task-" }}
                    {{ $branch := trimPrefix "refs/heads/task-" $ref }}
                    {{ $parts := splitList "-" $branch }}
                    {{ if gt (len $parts) 0 }}
                      {{ index $parts 0 }}
                    {{ end }}
                  {{ else }}
                    0
                  {{ end }}
              dest: taskId

