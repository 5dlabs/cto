---
# Namespace for storing platform secrets
apiVersion: v1
kind: Namespace
metadata:
  name: secret-store
  labels:
    app.kubernetes.io/name: secret-store
    app.kubernetes.io/part-of: platform

---
# GitHub PAT secret for ARC authentication
# This should be manually created with: kubectl create secret generic github-pat -n secret-store --from-literal=token=ghp_YOUR_TOKEN_HERE
apiVersion: v1
kind: Secret
metadata:
  name: github-pat
  namespace: secret-store
  labels:
    app.kubernetes.io/name: github-pat
    app.kubernetes.io/part-of: platform
    external-secrets.io/source: "true"  # Mark as source for External Secrets
type: Opaque
stringData:
  # This is a placeholder - replace with actual PAT token
  # Or create manually: kubectl create secret generic github-pat -n secret-store --from-literal=token=ghp_YOUR_TOKEN_HERE
  token: "PLACEHOLDER_REPLACE_WITH_ACTUAL_PAT"

---
# Service account for External Secrets to access this namespace
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-reader
  namespace: secret-store

---
# Role to allow reading secrets in this namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: secret-store
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

---
# Bind the role to the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-reader
  namespace: secret-store
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-reader
subjects:
- kind: ServiceAccount
  name: external-secrets-reader
  namespace: secret-store

---
# ClusterRole for External Secrets to access secrets across namespaces
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-secret-reader
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]

---
# Bind the cluster role to External Secrets service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-secret-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-secret-reader
subjects:
- kind: ServiceAccount
  name: external-secrets-operator
  namespace: external-secrets