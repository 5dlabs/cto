---
# Agent admin secret materialized via External Secrets
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: agent-admin-secrets
  namespace: agent-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: secret-store
    kind: ClusterSecretStore
  target:
    name: agent-admin-secrets
    creationPolicy: Owner
  data:
    # Kubernetes access (prefer KUBECONFIG_B64 to avoid multi-line issues)
    - secretKey: KUBECONFIG_B64
      remoteRef:
        key: agent-admin
        property: KUBECONFIG_B64
    # Argo CD API access
    - secretKey: ARGOCD_SERVER
      remoteRef:
        key: agent-admin
        property: ARGOCD_SERVER
    # Prefer username/password; clients log in to mint a session token at runtime
    - secretKey: ARGOCD_USERNAME
      remoteRef:
        key: agent-admin
        property: ARGOCD_USERNAME
    - secretKey: ARGOCD_PASSWORD
      remoteRef:
        key: agent-admin
        property: ARGOCD_PASSWORD
    # Optional: pre-minted token (if you choose to use tokens directly)
    - secretKey: ARGOCD_AUTH_TOKEN
      remoteRef:
        key: agent-admin
        property: ARGOCD_AUTH_TOKEN
    # GitHub admin PAT (use sparingly for org-level provisioning)
    - secretKey: GITHUB_ADMIN_TOKEN
      remoteRef:
        key: agent-admin
        property: GITHUB_ADMIN_TOKEN

