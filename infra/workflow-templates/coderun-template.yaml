---
# Argo Workflow Template for CodeRun Tasks
# This template creates CodeRun CRDs and lets the existing controller handle execution

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: coderun-template
  namespace: orchestrator
  labels:
    app.kubernetes.io/name: coderun-template
    app.kubernetes.io/part-of: platform
    orchestrator.platform/template-type: coderun
spec:
  # Define input parameters that match the MCP server interface
  arguments:
    parameters:
      # Required parameters from MCP server
      - name: task-id
        description: "Task Master task ID to implement"
      - name: service-id
        description: "Service identifier for persistent workspace"
      - name: repository-url
        description: "Target repository URL in org/repo format (e.g., 5dlabs/platform)"
      - name: docs-repository-url
        description: "Documentation repository URL in org/repo format"
      - name: docs-project-directory
        description: "Project directory within docs repository"
        default: "."
      - name: working-directory
        description: "Working directory within target repository"
        default: "."
      - name: github-user
        description: "GitHub username for commits and authentication"
      
      # Optional parameters
      - name: model
        description: "Claude model to use for execution"
        default: "claude-3-5-sonnet-20241022"
      - name: continue-session
        description: "Whether to continue previous session"
        default: "false"
      - name: overwrite-memory
        description: "Whether to overwrite CLAUDE.md memory file"
        default: "false"
      - name: docs-branch
        description: "Documentation branch to work from"
        default: "main"

  # Service account for workflow execution
  serviceAccountName: argo-workflow
  
  # Workflow timeout
  activeDeadlineSeconds: 3600  # 1 hour default
  
  # Main workflow entry point
  entrypoint: coderun-main
  
  templates:
    # Main CodeRun execution - create CRD and wait for completion
    - name: coderun-main
      steps:
      - - name: create-coderun-resource
          template: create-coderun-resource
      - - name: wait-for-completion
          template: wait-coderun-completion
          arguments:
            parameters:
            - name: coderun-name
              value: "{{steps.create-coderun-resource.outputs.parameters.name}}"
          
    - name: create-coderun-resource
      outputs:
        parameters:
        - name: name
          valueFrom:
            jsonPath: '{.metadata.name}'
      resource:
        action: create
        setOwnerReference: true
        manifest: |
              apiVersion: orchestrator.platform/v1
              kind: CodeRun
              metadata:
                generateName: "coderun-{{workflow.parameters.task-id}}-{{workflow.parameters.service-id}}-"
                namespace: orchestrator
                labels:
                  workflow-name: "{{workflow.name}}"
                  task-id: "{{workflow.parameters.task-id}}"
                  service: "{{workflow.parameters.service-id}}"
              spec:
                taskId: {{workflow.parameters.task-id}}
                service: "{{workflow.parameters.service-id}}"
                repositoryUrl: "{{workflow.parameters.repository-url}}"
                docsRepositoryUrl: "{{workflow.parameters.docs-repository-url}}"
                docsProjectDirectory: "{{workflow.parameters.docs-project-directory}}"
                workingDirectory: "{{workflow.parameters.working-directory}}"
                githubUser: "{{workflow.parameters.github-user}}"
                model: "{{workflow.parameters.model}}"
                continueSession: {{workflow.parameters.continue-session}}
                overwriteMemory: {{workflow.parameters.overwrite-memory}}
                docsBranch: "{{workflow.parameters.docs-branch}}"
                contextVersion: 1
            
    - name: wait-coderun-completion
      inputs:
        parameters:
        - name: coderun-name
      resource:
        action: get
        manifest: |
          apiVersion: orchestrator.platform/v1
          kind: CodeRun
          metadata:
            name: "{{inputs.parameters.coderun-name}}"
            namespace: orchestrator
        successCondition: status.phase == Succeeded
        failureCondition: status.phase == Failed
            
  # Cleanup policy
  ttlStrategy:
    secondsAfterCompletion: 86400  # Keep completed workflows for 24 hours
    secondsAfterFailure: 259200    # Keep failed workflows for 72 hours