---
replicaCount: 1
revisionHistoryLimit: 10

# External secrets configuration (using External Secrets Operator)
externalSecrets:
  enabled: false
  secretStore: "vault-backend"  # or "aws-secretsmanager"
  refreshInterval: "1h"
  secrets: []

image:
  repository: "ghcr.io/5dlabs/app"  # Default to ghcr.io
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets:
  - name: ghcr-login-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}

podSecurityContext:
  fsGroup: 65532

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false  # Many apps need to write temp files
  runAsNonRoot: true
  runAsUser: 1000  # Standard app user

service:
  type: ClusterIP
  port: 8080

terminationGracePeriodSeconds: 30

ingress:
  enabled: true
  className: nginx  # Using nginx ingress controller
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # If using cert-manager
  hosts:
    - host: app.example.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: app-tls
      hosts:
        - app.example.local
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  failureThreshold: 3
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
readinessProbe:
  failureThreshold: 3
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
configureDefaultAffinity: true

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Environment variables
env:
  - name: PORT
    value: "8080"
  - name: LOG_LEVEL
    value: "info"
  - name: ENVIRONMENT
    value: "production"

# Additional environment variables from secrets/configmaps
envFrom: []

configMap:
  enabled: false
  data: {}
    # config.yaml: |
    #   key: value

# Persistence for applications that need it
persistence:
  enabled: false
  storageClass: "standard"
  accessMode: ReadWriteOnce
  size: 8Gi
  mountPath: /data

# Network policies
networkPolicy:
  enabled: false
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  egress: []

