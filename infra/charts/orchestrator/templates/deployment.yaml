apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestrator.fullname" . }}
  labels:
    {{- include "orchestrator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "orchestrator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # Force pod restart when claude-templates ConfigMap changes
        claude-templates/checksum: {{ include (print $.Template.BasePath "/claude-templates-configmap.yaml") . | sha256sum }}
        # Force pod restart when controller config changes
        controller-config/checksum: {{ include (print $.Template.BasePath "/task-controller-config.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "orchestrator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "orchestrator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/orchestrator"]
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            # Kubernetes configuration
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "orchestrator.fullname" . }}-config
                  key: KUBERNETES_NAMESPACE
            - name: RUST_LOG
              valueFrom:
                configMapKeyRef:
                  name: {{ include "orchestrator.fullname" . }}-config
                  key: RUST_LOG
            # Secrets for agents
            {{- if .Values.secrets.anthropicApiKey }}
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  {{- if eq .Values.secrets.anthropicApiKey "use-existing" }}
                  name: orchestrator-secrets
                  {{- else }}
                  name: {{ include "orchestrator.fullname" . }}-secrets
                  {{- end }}
                  key: ANTHROPIC_API_KEY
            {{- end }}
          volumeMounts:
            # Mount claude templates ConfigMap
            - name: claude-templates
              mountPath: /claude-templates
              readOnly: true
            # Mount controller configuration ConfigMap
            - name: controller-config
              mountPath: /config
              readOnly: true
            # Mount tool catalog ConfigMap
            - name: tool-catalog
              mountPath: /tool-catalog
              readOnly: true
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: {{ .Values.service.name }}
            initialDelaySeconds: {{ .Values.healthCheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.healthCheck.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.healthCheck.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: {{ .Values.service.name }}
            initialDelaySeconds: {{ .Values.healthCheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.healthCheck.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.healthCheck.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        # Mount claude templates ConfigMap
        - name: claude-templates
          configMap:
            name: {{ include "orchestrator.fullname" . }}-claude-templates
        # Mount controller configuration ConfigMap
        - name: controller-config
          configMap:
            name: {{ include "orchestrator.fullname" . }}-task-controller-config
        # Mount tool catalog ConfigMap
        - name: tool-catalog
          configMap:
            name: toolman-tool-catalog
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}