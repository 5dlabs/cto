#!/bin/bash
set -e

# Script to generate the claude-templates ConfigMap from template files
# This solves the ArgoCD .Files issue by creating a static ConfigMap

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CHART_DIR="$(dirname "$SCRIPT_DIR")"
OUTPUT_FILE="$CHART_DIR/templates/claude-templates-static.yaml"

cd "$CHART_DIR"

echo "Generating static ConfigMap from claude-templates..."

# Header with metadata that uses Helm templates
cat > "$OUTPUT_FILE" << 'HEADER_EOF'
# This file is auto-generated by scripts/generate-templates-configmap.sh
# DO NOT EDIT MANUALLY - edit the source files in claude-templates/ instead
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "controller.fullname" . }}-claude-templates
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "controller.labels" . | nindent 4 }}
  annotations:
    generated-at: "TIMESTAMP_PLACEHOLDER"
binaryData:
HEADER_EOF

# Replace timestamp
sed -i.bak "s/TIMESTAMP_PLACEHOLDER/$(date -u +%Y-%m-%dT%H:%M:%SZ)/" "$OUTPUT_FILE" && rm "$OUTPUT_FILE.bak"

# Process each template file and base64 encode it
for file in claude-templates/**/*.hbs claude-templates/**/*.sh claude-templates/**/*.md; do
  if [ -f "$file" ]; then
    # Convert path to ConfigMap key format
    key=$(echo "$file" | sed 's/claude-templates\///' | sed 's/\//_/g')
    
    echo "  Processing: $file -> $key"
    
    # Base64 encode the content (single line for YAML)
    encoded=$(base64 < "$file" | tr -d '\n')
    
    # Add to ConfigMap
    echo "  $key: $encoded" >> "$OUTPUT_FILE"
  fi
done

echo "Generated: $OUTPUT_FILE"
echo "Total size: $(wc -c < "$OUTPUT_FILE") bytes"

# Validate the generated file
if [ $(wc -c < "$OUTPUT_FILE") -gt 1048576 ]; then
  echo "WARNING: ConfigMap exceeds 1MB limit!"
  exit 1
fi

echo "âœ… ConfigMap generation complete!"
echo ""
echo "Next steps:"
echo "1. Review the generated file: $OUTPUT_FILE"
echo "2. Commit it to Git: git add $OUTPUT_FILE && git commit -m 'chore: update claude-templates ConfigMap'"
echo "3. Push to trigger ArgoCD sync: git push"