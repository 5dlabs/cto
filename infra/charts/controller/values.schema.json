{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "properties": {
    "agents": {
      "type": "object",
      "description": "Agent definitions for GitHub App-based AI agents",
      "additionalProperties": {
        "type": "object",
        "required": ["name", "githubApp", "role", "description", "systemPrompt"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Friendly display name of the agent"
          },
          "githubApp": {
            "type": "string",
            "pattern": "^5DLabs-[A-Z][a-zA-Z-]+$",
            "description": "GitHub App name (must start with '5DLabs-')"
          },
          "appId": {
            "type": "string",
            "description": "GitHub App ID (optional, for existing apps)"
          },
          "clientId": {
            "type": "string",
            "description": "GitHub App client ID (optional, for existing apps)"
          },
          "role": {
            "type": "string",
            "minLength": 1,
            "description": "Role/specialty description of the agent"
          },
          "expertise": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "Areas of expertise for the agent"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "description": "Brief description of the agent's purpose"
          },
          "systemPrompt": {
            "type": "string",
            "minLength": 100,
            "description": "System prompt defining the agent's behavior"
          }
        }
      }
    },
    "replicaCount": {
      "type": "integer",
      "minimum": 1
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"]
        },
        "tag": {
          "type": "string"
        }
      },
      "required": ["repository"]
    },
    "agent": {
      "type": "object",
      "properties": {
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            },
            "pullPolicy": {
              "type": "string",
              "enum": ["Always", "IfNotPresent", "Never"]
            }
          },
          "required": ["repository"]
        },
        "inputBridge": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "image": {
              "type": "object",
              "properties": {
                "repository": {
                  "type": "string"
                },
                "tag": {
                  "type": "string"
                },
                "pullPolicy": {
                  "type": "string",
                  "enum": ["Always", "IfNotPresent", "Never"]
                }
              }
            },
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          }
        }
      }
    },
    "storage": {
      "type": "object",
      "properties": {
        "storageClassName": {
          "type": "string"
        },
        "workspaceSize": {
          "type": "string",
          "pattern": "^[0-9]+[KMGT]?i?$"
        }
      }
    },
    "namespace": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"]
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        },
        "targetPort": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        }
      }
    },
    "resources": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        }
      }
    },
    "secrets": {
      "type": "object",
      "properties": {
        "anthropicApiKey": {
          "type": "string"
        },
        "externalSecretsName": {
          "type": "string"
        }
      }
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        }
      }
    }
  },
  "required": ["agents"]
}