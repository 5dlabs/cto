#!/bin/bash
set -euo pipefail

# =========================================================================
# Blaze Frontend Agent - Codex CLI
# =========================================================================
# Automated React/Next.js/TypeScript frontend development with:
# - Next.js 15 + React 19 + TypeScript 5
# - shadcn/ui component library
# - Live Kubernetes deployment + Ngrok preview
# - Playwright E2E tests + screenshots
# - Automated PR creation with visual documentation
# =========================================================================

echo "🎨 Blaze Codex frontend workflow starting"
echo "════════════════════════════════════════════════════════════════"
echo "Task ID: {{task_id}}"
echo "Repository: {{repository_url}}"
echo "Service: {{service}}"
echo "════════════════════════════════════════════════════════════════"

# Source the base container setup
{{> codex_container_base
    agent_banner=""
    agent_completion_message=""}}

# =========================================================================
# BLAZE-SPECIFIC FRONTEND WORKFLOW
# =========================================================================

echo ""
echo "════════════════════════════════════════════════════════════════"
echo "║           BLAZE FRONTEND WORKFLOW STARTING                  ║"
echo "════════════════════════════════════════════════════════════════"
echo ""

# Ensure we're in the task workspace
cd "$TASK_WORKSPACE"

# Check if frontend scripts are available
SCRIPTS_DIR="/workspace/scripts/blaze"
if [ ! -d "$SCRIPTS_DIR" ]; then
    echo "⚠️  Blaze scripts not found at $SCRIPTS_DIR"
    echo "   Falling back to standard Codex workflow..."
    echo "✅ Blaze Codex frontend implementation complete"
    exit 0
fi

echo "✅ Blaze frontend scripts found"

# Step 1: Initialize Next.js project
echo ""
echo "📦 Step 1/5: Initializing Next.js + shadcn/ui project..."
echo "────────────────────────────────────────────────────────────────"
if bash "$SCRIPTS_DIR/init-nextjs-project.sh" "$CLAUDE_WORK_DIR"; then
    echo "✅ Next.js project initialized successfully"
else
    echo "❌ Next.js initialization failed"
    exit 1
fi

# Step 2: Let Codex implement the frontend
echo ""
echo "💻 Step 2/5: Running Codex for frontend implementation..."
echo "────────────────────────────────────────────────────────────────"
# The base template already runs Codex, so this step is already done
# Codex will generate React components based on the task requirements
echo "✅ Codex frontend implementation complete"

# Step 3: Deploy to Kubernetes
echo ""
echo "🚀 Step 3/5: Deploying to Kubernetes staging..."
echo "────────────────────────────────────────────────────────────────"
export NAMESPACE="agent-platform"
export TASK_ID="{{task_id}}"
export SERVICE_NAME="{{service}}"
if bash "$SCRIPTS_DIR/deploy-to-k8s.sh" "{{task_id}}" "{{service}}" 1; then
    echo "✅ Kubernetes deployment successful"
else
    echo "⚠️  Kubernetes deployment failed, continuing without live preview"
fi

# Step 4: Setup Ngrok live preview
echo ""
echo "🌐 Step 4/5: Setting up Ngrok live preview URL..."
echo "────────────────────────────────────────────────────────────────"
APP_NAME="task-{{task_id}}-{{service}}"
SERVICE_NAME="${APP_NAME}"
if bash "$SCRIPTS_DIR/setup-ngrok-ingress.sh" "$APP_NAME" "$SERVICE_NAME" 3000; then
    PREVIEW_URL=$(cat /workspace/preview_url.txt 2>/dev/null || echo "")
    if [ -n "$PREVIEW_URL" ]; then
        echo "✅ Live preview available at: $PREVIEW_URL"
        export PREVIEW_URL
    else
        echo "⚠️  Preview URL not generated"
    fi
else
    echo "⚠️  Ngrok setup failed, continuing without live preview"
fi

# Step 5: Run Playwright tests and capture screenshots
echo ""
echo "🎭 Step 5/5: Running Playwright E2E tests..."
echo "────────────────────────────────────────────────────────────────"
if [ -n "${PREVIEW_URL:-}" ]; then
    export PREVIEW_URL
    if bash "$SCRIPTS_DIR/run-playwright-tests.sh" "$PREVIEW_URL" "{{task_id}}"; then
        echo "✅ Playwright tests and screenshots complete"
        SCREENSHOTS_DIR="$CLAUDE_WORK_DIR/screenshots"
        if [ -d "$SCREENSHOTS_DIR" ]; then
            echo "📸 Screenshots saved to: $SCREENSHOTS_DIR"
            ls -lh "$SCREENSHOTS_DIR"/*.png 2>/dev/null || echo "   (no PNG files found)"
        fi
    else
        echo "⚠️  Playwright tests failed, continuing..."
    fi
else
    echo "⚠️  No preview URL available, skipping Playwright tests"
fi

# Step 6: Create PR with preview URL and screenshots
echo ""
echo "📝 Creating GitHub PR with live preview and screenshots..."
echo "────────────────────────────────────────────────────────────────"

# The base template handles PR creation, but we'll enhance it with frontend-specific info
# Save preview URL and screenshot info for the PR description
if [ -n "${PREVIEW_URL:-}" ]; then
    echo "" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "## 🌐 Live Preview" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "**[👉 View Live Demo]($PREVIEW_URL)** ← Click to see the implementation" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "> 🔗 **Preview URL**: \`$PREVIEW_URL\`" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "> ⏰ **Available until**: PR is merged (auto-cleanup after merge)" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "> 🔄 **Updates live**: Every push to this branch updates the preview" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "" >> "$TASK_WORKSPACE/.blaze-preview-info"
fi

# Add screenshot section if screenshots exist
if [ -d "$CLAUDE_WORK_DIR/screenshots" ] && [ -n "$(ls -A "$CLAUDE_WORK_DIR/screenshots"/*.png 2>/dev/null)" ]; then
    echo "---" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "## 📸 UI Screenshots" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "" >> "$TASK_WORKSPACE/.blaze-preview-info"
    
    # List available screenshots
    for screenshot in "$CLAUDE_WORK_DIR/screenshots"/*.png; do
        if [ -f "$screenshot" ]; then
            filename=$(basename "$screenshot")
            echo "- 📎 $filename" >> "$TASK_WORKSPACE/.blaze-preview-info"
        fi
    done
    echo "" >> "$TASK_WORKSPACE/.blaze-preview-info"
    echo "_Screenshots will be attached to this PR_" >> "$TASK_WORKSPACE/.blaze-preview-info"
fi

echo ""
echo "════════════════════════════════════════════════════════════════"
echo "║         BLAZE FRONTEND WORKFLOW COMPLETE                    ║"
echo "════════════════════════════════════════════════════════════════"
echo ""
echo "✅ Next.js project initialized"
echo "✅ React components implemented"
echo "✅ Kubernetes deployment: ${PREVIEW_URL:+SUCCESS}"
echo "✅ Live preview URL: ${PREVIEW_URL:-Not available}"
echo "✅ Screenshots captured: $(ls "$CLAUDE_WORK_DIR/screenshots"/*.png 2>/dev/null | wc -l)"
echo ""
echo "🎨 Blaze Codex frontend implementation complete"
