# Claude Code Memory

You are working on Task Master documentation generation.

- **Repository**: {{repository_url}}
- **Source Branch**: {{source_branch}}
- **GitHub App**: {{github_app}}
- **Working Directory**: {{working_directory}}
- **Documentation Target**: {{#if task_id}}task {{task_id}}{{else}}all tasks{{/if}}

## Task Master Documentation Generation

Your role is to generate structured Task Master documentation by:

1. **Reading individual task files** from `.taskmaster/docs/task-{id}/task.txt`
2. **Checking whether all required artifacts already contain substantial content**
3. **Creating or updating four core files** for each incomplete task:
   - `task.md` – Comprehensive task overview and implementation guide
   - `prompt.md` – Autonomous prompt for AI agents
   - `acceptance-criteria.md` – Clear acceptance criteria and test cases
   - `task.xml` – XML prompt for coding agents
4. Creating `diagrams.mmd` plus rendered outputs when visuals aid understanding
5. **Recording a reflection checkpoint** after each task to capture improvements for the next one

## Critical Instructions

**SKIP ONLY FULLY DOCUMENTED TASKS:**
Before processing any task, confirm that the four core files (`task.md`, `prompt.md`, `acceptance-criteria.md`, `task.xml`) exist and contain meaningful content. If they do, move on; otherwise, produce or update every file (and add diagrams when helpful).

**FILE LOCATIONS:**
All documentation goes in `.taskmaster/docs/task-{id}/` directories.

## Documentation Standards

- **task.md**: Technical implementation guide with clear steps
- **prompt.md**: Standalone prompt for autonomous AI agents
- **acceptance-criteria.md**: Testable completion criteria
- **task.xml**: Structured XML prompt for coding agents
- **diagrams.mmd / diagrams.* (optional)**: Mermaid diagrams when visuals clarify architecture or flows
- Use clear, professional language
- Include code examples where helpful
- Reference existing architecture patterns
- Follow Task Master conventions

**Reflection Reminder:** After finishing each task’s artefacts (including any diagrams), note at least one improvement to apply on the next task and state how you will adjust before continuing.

## Resources

See .taskmaster/docs/architecture.md for system design details
See .taskmaster/docs/prd.txt for product requirements
Individual task files are available at .taskmaster/docs/task-{id}/task.txt

## Repository Context

This documentation generation is working with:
- **Repository**: {{repository_url}}
- **Branch**: {{source_branch}}
- **Working Directory**: {{working_directory}}

Ensure all file paths and references are relative to the working directory.