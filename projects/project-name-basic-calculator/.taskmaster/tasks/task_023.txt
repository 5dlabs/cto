# Task ID: 23
# Title: Write Tests for Basic Operations
# Status: pending
# Dependencies: 22
# Priority: high
# Description: Create comprehensive unit tests for addition, subtraction, multiplication, and division
# Details:
Write tests for each operation: test('2 + 3 = 5'), test('10 - 4 = 6'), test('3 * 4 = 12'), test('15 / 3 = 5'). Include edge cases: negative numbers, decimals, large numbers

# Test Strategy:
Run all arithmetic tests, verify 100% pass rate, check edge cases are covered

# Subtasks:
## 1. Write Addition Tests with Various Inputs [pending]
### Dependencies: None
### Description: Create comprehensive test suite for addition operation covering positive numbers, negative numbers, decimals, and edge cases
### Details:
Implement tests: test('2 + 3 = 5'), test('-5 + 3 = -2'), test('0.1 + 0.2 = 0.3'), test('999999 + 1 = 1000000'), test('0 + 0 = 0'). Include tests for adding multiple numbers in sequence and verify decimal precision handling

## 2. Create Subtraction Tests Including Negative Results [pending]
### Dependencies: None
### Description: Develop test cases for subtraction operation with focus on negative results and boundary conditions
### Details:
Write tests: test('10 - 4 = 6'), test('5 - 10 = -5'), test('-5 - 3 = -8'), test('0.5 - 0.3 = 0.2'), test('0 - 100 = -100'). Include tests for subtracting from negative numbers and consecutive subtractions

## 3. Add Multiplication Tests with Decimals [pending]
### Dependencies: None
### Description: Create multiplication test suite with emphasis on decimal operations and precision
### Details:
Implement tests: test('3 * 4 = 12'), test('0.1 * 0.2 = 0.02'), test('-5 * 3 = -15'), test('2.5 * 4 = 10'), test('0 * 999 = 0'). Add tests for very small decimals and verify floating-point precision handling

## 4. Implement Division Tests with Edge Cases [pending]
### Dependencies: None
### Description: Write division tests covering normal operations and critical edge cases like division by zero
### Details:
Create tests: test('15 / 3 = 5'), test('10 / 4 = 2.5'), test('-20 / 5 = -4'), test('1 / 3 = 0.333...'), test('5 / 0 = Error'). Include tests for dividing zero, very small numbers, and ensure proper error handling for division by zero

