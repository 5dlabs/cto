# Task 7: Implement Claude and Codex CLI Adapters

## Description
Create production-ready adapters for Claude (reference implementation) and Codex (TOML configuration) to validate multi-CLI architecture

## Implementation Details
Create controller/src/cli/adapters/claude.rs implementing CliAdapter for Claude. Maintain backward compatibility with existing CLAUDE.md memory files. Implement claude-specific model validation and configuration generation. Create controller/src/cli/adapters/codex.rs with TOML configuration support using toml-rs v0.8.0. Implement Codex-specific features: sandbox_preset (read-only, workspace-write, danger-full-access), model_reasoning_effort configuration, AGENTS.md memory file support, experimental_resume session handling. Add OAuth token exchange for Codex authentication. Implement configuration mapping between universal format and CLI-specific formats. Create response parsing for both CLIs handling different output formats. Add CLI-specific error handling and recovery mechanisms. Build health check implementations for both adapters.

## Test Strategy
Integration test both adapters with real CLI binaries in containers. Test configuration generation produces valid TOML/JSON. Verify memory file operations (read/write/update). Test authentication flows with mock OAuth server. Verify response parsing handles all output formats. Test error recovery with simulated failures. Benchmark adapter performance vs direct CLI usage.
